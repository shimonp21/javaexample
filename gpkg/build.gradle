/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "com.vanniktech.maven.publish" version "0.30.0"
    id 'signing'
}

import com.vanniktech.maven.publish.SonatypeHost

mavenPublishing {
    coordinates("io.github.shimonp21", "shimonmynamespace", "1.2.0")
    signAllPublications()

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

    pom {
        name = 'shimonmynamespace'
        description = 'My description of my library'
        url = 'github.com/shimonp21/javaexample'
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                id = 'shimonp21'
                name = 'Shimon Pats'
                email = 'shimonp21@gmail.com'
            }
        }
        scm {
            url = 'github.com/shimonp21/gp'
            connection = 'scm:git://github.com/shimonp21/javaexample.git'
            developerConnection = 'scm:git://github.com/shimonp21/javaexample.git'
        }
    }
}


java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
    implementation 'org.slf4j:slf4j-api:2.0.0'
    implementation 'org.slf4j:slf4j-simple:2.0.0'
}

tasks.named('test', Test) {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

